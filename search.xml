<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BUUCTF-Reverse</title>
      <link href="/2025/02/15/BUUCTF-Reverse/"/>
      <url>/2025/02/15/BUUCTF-Reverse/</url>
      
        <content type="html"><![CDATA[<h1 id="ACTF新生赛"><a href="#ACTF新生赛" class="headerlink" title="ACTF新生赛"></a>ACTF新生赛</h1><h2 id="ACTF新生赛2020-easyre"><a href="#ACTF新生赛2020-easyre" class="headerlink" title="[ACTF新生赛2020]easyre"></a>[ACTF新生赛2020]easyre</h2><ul><li><code>upx -d</code>脱壳</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5Deasyre.png" alt="alt text"></p><ul><li><code>IDA</code>打开发现只有一个简单的加密，加密后为<code>v4</code>，即<code>*F&#39;\&quot;N,\&quot;(I?+@</code></li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5Deasyre-1.png" alt="alt text"><br><img src="/./pic/BUUCTF-Reverse.assets/%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5Deasyre-2.png" alt="alt text"></p><ul><li><code>shift+E</code>提取数据，编写python解密</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">v4 = <span class="string">&quot;*F&#x27;\&quot;N,\&quot;(I?+@&quot;</span></span><br><span class="line">__data_start__ = [</span><br><span class="line">    <span class="number">126</span>, <span class="number">125</span>, <span class="number">124</span>, <span class="number">123</span>, <span class="number">122</span>, <span class="number">121</span>, <span class="number">120</span>, <span class="number">119</span>, <span class="number">118</span>, <span class="number">117</span>,</span><br><span class="line">    <span class="number">116</span>, <span class="number">115</span>, <span class="number">114</span>, <span class="number">113</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">109</span>, <span class="number">108</span>, <span class="number">107</span>,</span><br><span class="line">    <span class="number">106</span>, <span class="number">105</span>, <span class="number">104</span>, <span class="number">103</span>, <span class="number">102</span>, <span class="number">101</span>, <span class="number">100</span>, <span class="number">99</span>, <span class="number">98</span>, <span class="number">97</span>,</span><br><span class="line">    <span class="number">96</span>, <span class="number">95</span>, <span class="number">94</span>, <span class="number">93</span>, <span class="number">92</span>, <span class="number">91</span>, <span class="number">90</span>, <span class="number">89</span>, <span class="number">88</span>, <span class="number">87</span>,</span><br><span class="line">    <span class="number">86</span>, <span class="number">85</span>, <span class="number">84</span>, <span class="number">83</span>, <span class="number">82</span>, <span class="number">81</span>, <span class="number">80</span>, <span class="number">79</span>, <span class="number">78</span>, <span class="number">77</span>,</span><br><span class="line">    <span class="number">76</span>, <span class="number">75</span>, <span class="number">74</span>, <span class="number">73</span>, <span class="number">72</span>, <span class="number">71</span>, <span class="number">70</span>, <span class="number">69</span>, <span class="number">68</span>, <span class="number">67</span>,</span><br><span class="line">    <span class="number">66</span>, <span class="number">65</span>, <span class="number">64</span>, <span class="number">63</span>, <span class="number">62</span>, <span class="number">61</span>, <span class="number">60</span>, <span class="number">59</span>, <span class="number">58</span>, <span class="number">57</span>,</span><br><span class="line">    <span class="number">56</span>, <span class="number">55</span>, <span class="number">54</span>, <span class="number">53</span>, <span class="number">52</span>, <span class="number">51</span>, <span class="number">50</span>, <span class="number">49</span>, <span class="number">48</span>, <span class="number">47</span>,</span><br><span class="line">    <span class="number">46</span>, <span class="number">45</span>, <span class="number">44</span>, <span class="number">43</span>, <span class="number">42</span>, <span class="number">41</span>, <span class="number">40</span>, <span class="number">39</span>, <span class="number">38</span>, <span class="number">37</span>,</span><br><span class="line">    <span class="number">36</span>, <span class="number">35</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">34</span>, <span class="number">0</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(v4)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(__data_start__)):</span><br><span class="line">        <span class="keyword">if</span> v4[i] == <span class="built_in">chr</span>(__data_start__[j]):</span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">chr</span>(j + <span class="number">1</span>), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">            </span><br></pre></td></tr></table></figure><h2 id="ACTF新生赛2020-Oruga"><a href="#ACTF新生赛2020-Oruga" class="headerlink" title="[ACTF新生赛2020]Oruga"></a>[ACTF新生赛2020]Oruga</h2><p><strong>迷宫题，与常规迷宫有点不一样</strong></p><p><img src="/./pic/BUUCTF-Reverse.assets/%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DOruga-1.png" alt="alt text"></p><ul><li>迷宫，终点 <code>!</code>，迷宫在<code>byte_201020</code></li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DOruga-3.png" alt="alt text"></p><ul><li>在<code>byte_201020[]</code>按<code>shift+E</code>提取迷宫，变为迷宫，指定行、列</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">unsigned</span> <span class="type">char</span> ida_chars_byte_201020[] =</span><br><span class="line">&#123;</span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x23</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, </span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x4F</span>, <span class="number">0x4F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x4F</span>, <span class="number">0x4F</span>, <span class="number">0x00</span>, <span class="number">0x50</span>, <span class="number">0x50</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x4C</span>, <span class="number">0x00</span>, <span class="number">0x4F</span>, <span class="number">0x4F</span>, <span class="number">0x00</span>, <span class="number">0x4F</span>, <span class="number">0x4F</span>, <span class="number">0x00</span>, <span class="number">0x50</span>, </span><br><span class="line">  <span class="number">0x50</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x4C</span>, <span class="number">0x00</span>, <span class="number">0x4F</span>, </span><br><span class="line">  <span class="number">0x4F</span>, <span class="number">0x00</span>, <span class="number">0x4F</span>, <span class="number">0x4F</span>, <span class="number">0x00</span>, <span class="number">0x50</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x4C</span>, <span class="number">0x4C</span>, <span class="number">0x00</span>, <span class="number">0x4F</span>, <span class="number">0x4F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x50</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x4F</span>, <span class="number">0x4F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x50</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x23</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x4D</span>, <span class="number">0x4D</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x4D</span>, <span class="number">0x4D</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x45</span>, <span class="number">0x45</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x30</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x45</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x45</span>, <span class="number">0x45</span>, <span class="number">0x54</span>, <span class="number">0x54</span>, </span><br><span class="line">  <span class="number">0x54</span>, <span class="number">0x49</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x45</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x54</span>, <span class="number">0x00</span>, <span class="number">0x49</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x45</span>, <span class="number">0x00</span>, </span><br><span class="line">  <span class="number">0x00</span>, <span class="number">0x54</span>, <span class="number">0x00</span>, <span class="number">0x49</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, </span><br><span class="line">  <span class="number">0x21</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x45</span>, <span class="number">0x45</span></span><br><span class="line">&#125;;</span><br><span class="line"># maze_str_to_list</span><br><span class="line">maze_str = (<span class="string">&quot;    #       ####   ##   OO              OO PP      L OO OO PP      L OO OO P      LL OO    P         OO    P    #                           #         MMM   #          MMM    EE   0 M M M    E               EETTTI M M M    E  T I M M M    E  T I M M M!   EE&quot;</span>)</span><br><span class="line">print(len(maze_str))</span><br><span class="line">index = <span class="number">0</span></span><br><span class="line">row = <span class="number">16</span></span><br><span class="line">col = <span class="number">16</span></span><br><span class="line">maze = []</span><br><span class="line"><span class="keyword">for</span> i in range(row):</span><br><span class="line">    tmp = []</span><br><span class="line">    <span class="keyword">for</span> j in range(col):</span><br><span class="line">        tmp.append(maze_str[index])</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">    maze.append(tmp)</span><br><span class="line">print(maze)</span><br><span class="line"></span><br><span class="line"># <span class="number">256</span></span><br><span class="line"># [</span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27;#&#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27;L&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27;O&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;P&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>],</span><br><span class="line">#     [<span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>],</span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;E&#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27; &#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;E&#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27; &#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27; &#x27;</span>], </span><br><span class="line">#     [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;T&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;I&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;M&#x27;</span>, <span class="string">&#x27;!&#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;E&#x27;</span>]</span><br><span class="line"></span><br><span class="line"># ]</span><br><span class="line"># 起点<span class="string">&#x27; &#x27;</span>（<span class="number">0</span>，<span class="number">0</span>） ，终点<span class="string">&#x27;!&#x27;</span>（<span class="number">15</span>,<span class="number">10</span>）</span><br></pre></td></tr></table></figure><ul><li>同一障碍为<code>#</code>以便后续脚本，当后来发现这不是通常的迷宫，用<code>bfs</code>算法走的路径是错的，关键在<code>v2 += v4</code>这表示一直移动，所以移动应该是按下面图片来走</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">maze_str = (<span class="string">&quot;    #       ####   ##   OO              OO PP      L OO OO PP      L OO OO P      LL OO    P         OO    P    #                           #         MMM   #          MMM    EE   0 M M M    E               EETTTI M M M    E  T I M M M    E  T I M M M!   EE&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(maze_str))</span><br><span class="line">index = <span class="number">0</span></span><br><span class="line">row = <span class="number">16</span></span><br><span class="line">col = <span class="number">16</span></span><br><span class="line">maze = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(row):</span><br><span class="line">    tmp = []</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(col):</span><br><span class="line">        <span class="keyword">if</span> maze_str[index] == <span class="string">&#x27;!&#x27;</span> <span class="keyword">or</span> maze_str[index] == <span class="string">&#x27; &#x27;</span>:</span><br><span class="line">            tmp.append(maze_str[index])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tmp.append(<span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">        index += <span class="number">1</span></span><br><span class="line">    maze.append(tmp)</span><br><span class="line"><span class="built_in">print</span>(maze)</span><br><span class="line"><span class="comment"># 256</span></span><br><span class="line"><span class="comment"># [</span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;], </span></span><br><span class="line"><span class="comment">#     [&#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;!&#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27; &#x27;, &#x27;#&#x27;, &#x27;#&#x27;]</span></span><br><span class="line"><span class="comment"># ]</span></span><br></pre></td></tr></table></figure><p>向下移动：M</p><p>向左移动：J</p><p>向上移动：E</p><p>向右移动：W</p><p><code>flag&#123;MEWEMEWJMEWJM&#125;</code></p><ul><li>找的网图大概这样走</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DOruga-2.png" alt="alt text"></p><h2 id="ACTF新生赛2020-Universe-final-answer"><a href="#ACTF新生赛2020-Universe-final-answer" class="headerlink" title="[ACTF新生赛2020]Universe_final_answer"></a>[ACTF新生赛2020]Universe_final_answer</h2><ul><li>64位，无壳，IDA打开</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DUniverse_final_answer.png" alt="alt text"></p><ul><li>用z3处理，根据图中，v1和v2，v6和v7要交换一下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line">v1 = Int(<span class="string">&#x27;v2&#x27;</span>) <span class="comment"># 交换</span></span><br><span class="line">v2 = Int(<span class="string">&#x27;v1&#x27;</span>)</span><br><span class="line">v3 = Int(<span class="string">&#x27;v3&#x27;</span>)</span><br><span class="line">v4 = Int(<span class="string">&#x27;v4&#x27;</span>)</span><br><span class="line">v5 = Int(<span class="string">&#x27;v5&#x27;</span>)</span><br><span class="line">v6 = Int(<span class="string">&#x27;v7&#x27;</span>) <span class="comment"># 交换</span></span><br><span class="line">v7 = Int(<span class="string">&#x27;v6&#x27;</span>)</span><br><span class="line">v8 = Int(<span class="string">&#x27;v8&#x27;</span>)</span><br><span class="line">v9 = Int(<span class="string">&#x27;v9&#x27;</span>)</span><br><span class="line">v11 = Int(<span class="string">&#x27;v11&#x27;</span>)</span><br><span class="line"></span><br><span class="line">s.add(-<span class="number">85</span> * v9 + <span class="number">58</span> * v8 + <span class="number">97</span> * v6 + v7 + -<span class="number">45</span> * v5 + <span class="number">84</span> * v4 + <span class="number">95</span> * v2 - <span class="number">20</span> * v1 + <span class="number">12</span> * v3 == <span class="number">12613</span>)</span><br><span class="line">s.add(<span class="number">30</span> * v11 + -<span class="number">70</span> * v9 + -<span class="number">122</span> * v6 + -<span class="number">81</span> * v7 + -<span class="number">66</span> * v5 + -<span class="number">115</span> * v4 + -<span class="number">41</span> * v3 + -<span class="number">86</span> * v1 - <span class="number">15</span> * v2 - <span class="number">30</span> * v8 == -<span class="number">54400</span>)</span><br><span class="line">s.add(-<span class="number">103</span> * v11 + <span class="number">120</span> * v8 + <span class="number">108</span> * v7 + <span class="number">48</span> * v4 + -<span class="number">89</span> * v3 + <span class="number">78</span> * v1 - <span class="number">41</span> * v2 + <span class="number">31</span> * v5 - (v6 * <span class="number">64</span>) - <span class="number">120</span> * v9 == -<span class="number">10283</span>)</span><br><span class="line">s.add(<span class="number">71</span> * v6 + (v7 * <span class="number">128</span>) + <span class="number">99</span> * v5 + -<span class="number">111</span> * v3 + <span class="number">85</span> * v1 + <span class="number">79</span> * v2 - <span class="number">30</span> * v4 - <span class="number">119</span> * v8 + <span class="number">48</span> * v9 - <span class="number">16</span> * v11 == <span class="number">22855</span>)</span><br><span class="line">s.add(<span class="number">5</span> * v11 + <span class="number">23</span> * v9 + <span class="number">122</span> * v8 + -<span class="number">19</span> * v6 + <span class="number">99</span> * v7 + -<span class="number">117</span> * v5 + -<span class="number">69</span> * v3 + <span class="number">22</span> * v1 - <span class="number">98</span> * v2 + <span class="number">10</span> * v4 == -<span class="number">2944</span>)</span><br><span class="line">s.add(-<span class="number">54</span> * v11 + -<span class="number">23</span> * v8 + -<span class="number">82</span> * v3 + -<span class="number">85</span> * v2 + <span class="number">124</span> * v1 - <span class="number">11</span> * v4 - <span class="number">8</span> * v5 - <span class="number">60</span> * v7 + <span class="number">95</span> * v6 + <span class="number">100</span> * v9 == -<span class="number">2222</span>)</span><br><span class="line">s.add(-<span class="number">83</span> * v11 + -<span class="number">111</span> * v7 + -<span class="number">57</span> * v2 + <span class="number">41</span> * v1 + <span class="number">73</span> * v3 - <span class="number">18</span> * v4 + <span class="number">26</span> * v5 + <span class="number">16</span> * v6 + <span class="number">77</span> * v8 - <span class="number">63</span> * v9 == -<span class="number">13258</span>)</span><br><span class="line">s.add(<span class="number">81</span> * v11 + -<span class="number">48</span> * v9 + <span class="number">66</span> * v8 + -<span class="number">104</span> * v6 + -<span class="number">121</span> * v7 + <span class="number">95</span> * v5 + <span class="number">85</span> * v4 + <span class="number">60</span> * v3 + -<span class="number">85</span> * v2 + <span class="number">80</span> * v1 == -<span class="number">1559</span>)</span><br><span class="line">s.add(<span class="number">101</span> * v11 + -<span class="number">85</span> * v9 + <span class="number">7</span> * v6 + <span class="number">117</span> * v7 + -<span class="number">83</span> * v5 + -<span class="number">101</span> * v4 + <span class="number">90</span> * v3 + -<span class="number">28</span> * v1 + <span class="number">18</span> * v2 - v8 == <span class="number">6308</span>)</span><br><span class="line">s.add(<span class="number">99</span> * v11 + -<span class="number">28</span> * v9 + <span class="number">5</span> * v8 + <span class="number">93</span> * v6 + -<span class="number">18</span> * v7 + -<span class="number">127</span> * v5 + <span class="number">6</span> * v4 + -<span class="number">9</span> * v3 + -<span class="number">93</span> * v1 + <span class="number">58</span> * v2 == -<span class="number">1697</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">    result = s.model()</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"><span class="comment"># [v1 = 70,</span></span><br><span class="line"><span class="comment">#  v2 = 48,</span></span><br><span class="line"><span class="comment">#  v4 = 82,</span></span><br><span class="line"><span class="comment">#  v11 = 64,</span></span><br><span class="line"><span class="comment">#  v3 = 117,</span></span><br><span class="line"><span class="comment">#  v5 = 84,</span></span><br><span class="line"><span class="comment">#  v7 = 95,</span></span><br><span class="line"><span class="comment">#  v9 = 119,</span></span><br><span class="line"><span class="comment">#  v8 = 55,</span></span><br><span class="line"><span class="comment">#  v6 = 121]</span></span><br><span class="line">flag = [</span><br><span class="line">    <span class="number">70</span>, <span class="number">48</span>, <span class="number">117</span>, <span class="number">82</span>, <span class="number">84</span>, <span class="number">121</span>, <span class="number">95</span>, <span class="number">55</span>, <span class="number">119</span>, <span class="number">64</span></span><br><span class="line">]</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> flag:</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(c), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment"># F0uRTy_7w@</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>还有一步<code>sub_C50</code>，再运行程序输入<code>F0uRTy_7w@</code>，得到<code>F0uRTy_7w@_42</code></li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020%5DUniverse_final_answer-1.png" alt="alt text"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;F0uRTy_7w@_42&#125;</span><br></pre></td></tr></table></figure><h1 id="BJDCTF"><a href="#BJDCTF" class="headerlink" title="BJDCTF"></a>BJDCTF</h1><h2 id="BJDCTF2020-BJD-hamburger-competition"><a href="#BJDCTF2020-BJD-hamburger-competition" class="headerlink" title="[BJDCTF2020]BJD-hamburger-competition"></a>[BJDCTF2020]BJD-hamburger-competition</h2><p><a href="https://bbs.kanxue.com/thread-272066.htm">WP</a></p><ul><li>第一次做的Unity3D题目，抽象的老八秘制小汉堡游戏</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BBJDCTF2020%5DBJD-hamburger-competition-5.png" alt="alt text"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Unity3D是由Unity Technologies开发的一个让玩家轻松创建互动内容的多平台的综合型游戏开发工具，</span><br><span class="line">Unity3D是用C#开发的，</span><br><span class="line">C#的反汇编工具为dnspy，但是把哪个东西丢进去呢？</span><br><span class="line"> </span><br><span class="line">unity在打包玩程序后，会将所有的代码打进一个Assembly-CSharp.dll的文件里面，</span><br><span class="line">通过这个文件的反编译，就能详细看见里面的代码内容。(这个文件在Managed目录下)</span><br></pre></td></tr></table></figure><p><img src="/./pic/BUUCTF-Reverse.assets/%5BBJDCTF2020%5DBJD-hamburger-competition-1.png" alt="alt text"></p><ul><li>意思是<code>sha1</code>对<code>str</code>加密结果为图中那一串，再用<code>str</code>的<code>MD5</code>的前20位作为flag</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BBJDCTF2020%5DBJD-hamburger-competition-2.png" alt="alt text"></p><ul><li>所以在线sha1解密，在MD5加密就行</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BBJDCTF2020%5DBJD-hamburger-competition-3.png" alt="alt text"></p><p><img src="/./pic/BUUCTF-Reverse.assets/%5BBJDCTF2020%5DBJD-hamburger-competition-4.png" alt="alt text"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">B8C37E33DEFDE51CF91E1E03E51657DA</span><br></pre></td></tr></table></figure><p>取前20个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;B8C37E33DEFDE51CF91E&#125;</span><br></pre></td></tr></table></figure><h1 id="MRCTF"><a href="#MRCTF" class="headerlink" title="MRCTF"></a>MRCTF</h1><h2 id="MRCTF2020-hello-world-go"><a href="#MRCTF2020-hello-world-go" class="headerlink" title="[MRCTF2020]hello_world_go"></a>[MRCTF2020]hello_world_go</h2><ul><li>应该是个签到题，IDA打开就是flag</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BMRCTF2020%5Dhello_world_go-1.png" alt="alt text "></p><h2 id="MRCTF2020-PixelShooter"><a href="#MRCTF2020-PixelShooter" class="headerlink" title="[MRCTF2020]PixelShooter"></a>[MRCTF2020]PixelShooter</h2><ul><li>unity游戏逆向还得是dnspy</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BMRCTF2020%5DPixelShooter-1.png" alt="alt text"></p><p><img src="/./pic/BUUCTF-Reverse.assets/%5BMRCTF2020%5DPixelShooter.png" alt="alt text"></p><h2 id="MRCTF2020-Transform"><a href="#MRCTF2020-Transform" class="headerlink" title="[MRCTF2020]Transform"></a>[MRCTF2020]Transform</h2><p><img src="/./pic/BUUCTF-Reverse.assets/%5BMRCTF2020%5DTransform.png" alt="alt text"></p><ul><li>64位，无壳</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BMRCTF2020%5DTransform-2.png" alt="alt text"></p><ul><li>不懂，搜的，但对解题没影响，因为提取的数据（data）都小于2^8^&#x3D;128</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">对于 LOBYTE(<span class="number">9</span>)，我们首先需要理解 LOBYTE 宏的作用：它提取一个 <span class="number">16</span> 位数的低 <span class="number">8</span> 位部分。</span><br><span class="line"></span><br><span class="line">LOBYTE(w) 宏通常是这样定义的：</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOBYTE(w) ((unsigned char)(w &amp; 0xFF))</span></span><br><span class="line">分析</span><br><span class="line">给定输入值 <span class="number">9</span>：</span><br><span class="line"></span><br><span class="line"><span class="number">9</span> 的二进制表示是 <span class="number">0000</span> <span class="number">0000</span> <span class="number">0000</span> <span class="number">1001</span> (<span class="number">16</span> 位的二进制表示)，在低字节中，我们看到它的低 <span class="number">8</span> 位是 <span class="number">0000</span> <span class="number">1001</span>，即 <span class="number">9</span>。</span><br><span class="line"></span><br><span class="line">执行 LOBYTE(<span class="number">9</span>)：</span><br><span class="line"></span><br><span class="line"><span class="number">9</span> 的二进制表示 <span class="number">0000</span> <span class="number">1001</span>，低 <span class="number">8</span> 位是 <span class="number">0000</span> <span class="number">1001</span>，它的值为 <span class="number">9</span>。</span><br><span class="line">结论</span><br><span class="line">LOBYTE(<span class="number">9</span>) 的结果是 <span class="number">9</span>。</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>脚本</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">data = [</span><br><span class="line">    <span class="number">103</span>, <span class="number">121</span>, <span class="number">123</span>, <span class="number">127</span>, <span class="number">117</span>, <span class="number">43</span>, <span class="number">60</span>, <span class="number">82</span>, <span class="number">83</span>, <span class="number">121</span>,</span><br><span class="line">    <span class="number">87</span>, <span class="number">94</span>, <span class="number">93</span>, <span class="number">66</span>, <span class="number">123</span>, <span class="number">45</span>, <span class="number">42</span>, <span class="number">102</span>, <span class="number">66</span>, <span class="number">126</span>,</span><br><span class="line">    <span class="number">76</span>, <span class="number">87</span>, <span class="number">121</span>, <span class="number">65</span>, <span class="number">107</span>, <span class="number">126</span>, <span class="number">101</span>, <span class="number">60</span>, <span class="number">92</span>, <span class="number">69</span>,</span><br><span class="line">    <span class="number">111</span>, <span class="number">98</span>, <span class="number">77</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">index = [<span class="number">9</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">23</span>, <span class="number">7</span>, <span class="number">24</span>, <span class="number">12</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">16</span>, <span class="number">3</span>, <span class="number">17</span>, <span class="number">32</span>, <span class="number">29</span>, <span class="number">11</span>, <span class="number">30</span>, <span class="number">27</span>,</span><br><span class="line">         <span class="number">22</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">19</span>, <span class="number">20</span>, <span class="number">21</span>, <span class="number">2</span>, <span class="number">25</span>, <span class="number">5</span>, <span class="number">31</span>, <span class="number">8</span>, <span class="number">18</span>, <span class="number">26</span>, <span class="number">28</span>, <span class="number">14</span>, <span class="number">0</span>, ]</span><br><span class="line"><span class="comment"># print(len(data))</span></span><br><span class="line"><span class="comment"># print(len(index))</span></span><br><span class="line">flag = [<span class="number">0</span>] * <span class="number">33</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(data)):</span><br><span class="line">    flag[index[i]] = <span class="built_in">chr</span>(data[i] ^ index[i])</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(flag))</span><br><span class="line"><span class="comment"># MRCTF&#123;Tr4nsp0sltiON_Clph3r_1s_3z&#125;</span></span><br></pre></td></tr></table></figure><h1 id="GWCTF"><a href="#GWCTF" class="headerlink" title="GWCTF"></a>GWCTF</h1><h1 id="HDCTF"><a href="#HDCTF" class="headerlink" title="HDCTF"></a>HDCTF</h1><h1 id="WUSTCTF"><a href="#WUSTCTF" class="headerlink" title="WUSTCTF"></a>WUSTCTF</h1><h2 id="WUSTCTF2020-Cr0ssfun"><a href="#WUSTCTF2020-Cr0ssfun" class="headerlink" title="[WUSTCTF2020]Cr0ssfun"></a>[WUSTCTF2020]Cr0ssfun</h2><ul><li>查壳，无</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5DCr0ssfun.png" alt="alt text"></p><ul><li>单纯的套娃拼接，直接让kimi帮我提取了</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">_BOOL8 __fastcall <span class="title function_">iven_is_handsome</span><span class="params">(_BYTE *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> a1[<span class="number">10</span>] == <span class="number">112</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">13</span>] == <span class="number">64</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">3</span>] == <span class="number">102</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">26</span>] == <span class="number">114</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">20</span>] == <span class="number">101</span></span><br><span class="line">      &amp;&amp; (<span class="type">unsigned</span> <span class="type">int</span>)iven_is_c0ol(a1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_BOOL8 __fastcall <span class="title function_">iven_is_c0ol</span><span class="params">(_BYTE *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> a1[<span class="number">7</span>] == <span class="number">48</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">16</span>] == <span class="number">95</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">11</span>] == <span class="number">112</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">23</span>] == <span class="number">101</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">30</span>] == <span class="number">117</span></span><br><span class="line">      &amp;&amp; (<span class="type">unsigned</span> <span class="type">int</span>)iven_1s_educated(a1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_BOOL8 __fastcall <span class="title function_">iven_1s_educated</span><span class="params">(_BYTE *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> *a1 == <span class="number">119</span> &amp;&amp; a1[<span class="number">6</span>] == <span class="number">50</span> &amp;&amp; a1[<span class="number">22</span>] == <span class="number">115</span> &amp;&amp; a1[<span class="number">31</span>] == <span class="number">110</span> &amp;&amp; a1[<span class="number">12</span>] == <span class="number">95</span> &amp;&amp; (<span class="type">unsigned</span> <span class="type">int</span>)iven_1s_brave(a1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_BOOL8 __fastcall <span class="title function_">iven_1s_brave</span><span class="params">(_BYTE *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> a1[<span class="number">15</span>] == <span class="number">100</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">8</span>] == <span class="number">123</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">18</span>] == <span class="number">51</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">28</span>] == <span class="number">95</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">21</span>] == <span class="number">114</span></span><br><span class="line">      &amp;&amp; (<span class="type">unsigned</span> <span class="type">int</span>)iven_1s_great(a1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_BOOL8 __fastcall <span class="title function_">iven_1s_great</span><span class="params">(_BYTE *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> a1[<span class="number">2</span>] == <span class="number">116</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">9</span>] == <span class="number">99</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">32</span>] == <span class="number">125</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">19</span>] == <span class="number">118</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">5</span>] == <span class="number">48</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">14</span>] == <span class="number">110</span></span><br><span class="line">      &amp;&amp; (<span class="type">unsigned</span> <span class="type">int</span>)iven_and_grace(a1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_BOOL8 __fastcall <span class="title function_">iven_and_grace</span><span class="params">(_BYTE *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> a1[<span class="number">4</span>] == <span class="number">50</span> &amp;&amp; a1[<span class="number">17</span>] == <span class="number">114</span> &amp;&amp; a1[<span class="number">29</span>] == <span class="number">102</span> &amp;&amp; a1[<span class="number">17</span>] == <span class="number">114</span> &amp;&amp; a1[<span class="number">24</span>] == <span class="number">95</span> &amp;&amp; (<span class="type">unsigned</span> <span class="type">int</span>)finally_fun(a1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_BOOL8 __fastcall <span class="title function_">finally_fun</span><span class="params">(_BYTE *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">return</span> a1[<span class="number">1</span>] == <span class="number">99</span> &amp;&amp; a1[<span class="number">25</span>] == <span class="number">64</span> &amp;&amp; a1[<span class="number">27</span>] == <span class="number">101</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">a1[<span class="number">10</span>] == <span class="number">112</span></span><br><span class="line">a1[<span class="number">13</span>] == <span class="number">64</span></span><br><span class="line">a1[<span class="number">3</span>] == <span class="number">102</span></span><br><span class="line">a1[<span class="number">26</span>] == <span class="number">114</span></span><br><span class="line">a1[<span class="number">20</span>] == <span class="number">101</span></span><br><span class="line">a1[<span class="number">7</span>] == <span class="number">48</span></span><br><span class="line">a1[<span class="number">16</span>] == <span class="number">95</span></span><br><span class="line">a1[<span class="number">11</span>] == <span class="number">112</span></span><br><span class="line">a1[<span class="number">23</span>] == <span class="number">101</span></span><br><span class="line">a1[<span class="number">30</span>] == <span class="number">117</span></span><br><span class="line">a1[<span class="number">15</span>] == <span class="number">100</span></span><br><span class="line">a1[<span class="number">8</span>] == <span class="number">123</span></span><br><span class="line">a1[<span class="number">18</span>] == <span class="number">51</span></span><br><span class="line">a1[<span class="number">28</span>] == <span class="number">95</span></span><br><span class="line">a1[<span class="number">21</span>] == <span class="number">114</span></span><br><span class="line">a1[<span class="number">2</span>] == <span class="number">116</span>  </span><br><span class="line">a1[<span class="number">9</span>] == <span class="number">99</span></span><br><span class="line">a1[<span class="number">32</span>] == <span class="number">125</span></span><br><span class="line">a1[<span class="number">19</span>] == <span class="number">118</span></span><br><span class="line">a1[<span class="number">5</span>] == <span class="number">48</span></span><br><span class="line">a1[<span class="number">14</span>] == <span class="number">110</span></span><br><span class="line">a1[<span class="number">4</span>] == <span class="number">50</span> </span><br><span class="line">a1[<span class="number">17</span>] == <span class="number">114</span> </span><br><span class="line">a1[<span class="number">29</span>] == <span class="number">102</span> </span><br><span class="line">a1[<span class="number">17</span>] == <span class="number">114</span> </span><br><span class="line">a1[<span class="number">24</span>] == <span class="number">95</span></span><br><span class="line">a1[<span class="number">1</span>] == <span class="number">99</span> </span><br><span class="line">a1[<span class="number">25</span>] == <span class="number">64</span> </span><br><span class="line">a1[<span class="number">27</span>] == <span class="number">101</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5DCr0ssfun-2.png" alt="alt text"></p><ul><li>最后用flag{}包裹</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cctf2000&#123;cpp_@nd_r3verse_@re_fun&#125;</span><br><span class="line"># flag&#123;cpp_@nd_r3verse_@re_fun&#125;</span><br></pre></td></tr></table></figure><h2 id="WUSTCTF2020-level2"><a href="#WUSTCTF2020-level2" class="headerlink" title="[WUSTCTF2020]level2"></a>[WUSTCTF2020]level2</h2><ul><li>UPX加壳了</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5Dlevel2.png" alt="alt text"></p><ul><li><code>upx -d</code>去壳</li></ul><img src="./pic/BUUCTF-Reverse.assets/[WUSTCTF2020]level2-1.png" alt="alt text" /><p><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5Dlevel2-2.png" alt="alt text"></p><h2 id="WUSTCTF2020-level3"><a href="#WUSTCTF2020-level3" class="headerlink" title="[WUSTCTF2020]level3"></a>[WUSTCTF2020]level3</h2><p><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5Dlevel3.png" alt="alt text"></p><ul><li>明示是Base64加密，shift+F12找到密文，用赛博厨子解密了一下，不对<br><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5Dlevel3-2.png" alt="alt text"><br><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5Dlevel3-1.png" alt="alt text"></li><li>查看Base64表，按 X 查看表的引用，果然不对劲，发现有对表的操作<br><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5Dlevel3-3.png" alt="alt text"><br><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5Dlevel3-4.png" alt="alt text"></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">base64_table = [</span><br><span class="line">    <span class="number">0x41</span>, <span class="number">0x42</span>, <span class="number">0x43</span>, <span class="number">0x44</span>, <span class="number">0x45</span>, <span class="number">0x46</span>, <span class="number">0x47</span>, <span class="number">0x48</span>, <span class="number">0x49</span>, <span class="number">0x4A</span>,</span><br><span class="line">    <span class="number">0x4B</span>, <span class="number">0x4C</span>, <span class="number">0x4D</span>, <span class="number">0x4E</span>, <span class="number">0x4F</span>, <span class="number">0x50</span>, <span class="number">0x51</span>, <span class="number">0x52</span>, <span class="number">0x53</span>, <span class="number">0x54</span>,</span><br><span class="line">    <span class="number">0x55</span>, <span class="number">0x56</span>, <span class="number">0x57</span>, <span class="number">0x58</span>, <span class="number">0x59</span>, <span class="number">0x5A</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x63</span>, <span class="number">0x64</span>,</span><br><span class="line">    <span class="number">0x65</span>, <span class="number">0x66</span>, <span class="number">0x67</span>, <span class="number">0x68</span>, <span class="number">0x69</span>, <span class="number">0x6A</span>, <span class="number">0x6B</span>, <span class="number">0x6C</span>, <span class="number">0x6D</span>, <span class="number">0x6E</span>,</span><br><span class="line">    <span class="number">0x6F</span>, <span class="number">0x70</span>, <span class="number">0x71</span>, <span class="number">0x72</span>, <span class="number">0x73</span>, <span class="number">0x74</span>, <span class="number">0x75</span>, <span class="number">0x76</span>, <span class="number">0x77</span>, <span class="number">0x78</span>,</span><br><span class="line">    <span class="number">0x79</span>, <span class="number">0x7A</span>, <span class="number">0x30</span>, <span class="number">0x31</span>, <span class="number">0x32</span>, <span class="number">0x33</span>, <span class="number">0x34</span>, <span class="number">0x35</span>, <span class="number">0x36</span>, <span class="number">0x37</span>,</span><br><span class="line">    <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x2B</span>, <span class="number">0x2F</span>, <span class="number">0x00</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10</span>):</span><br><span class="line">    v1 = base64_table[i]</span><br><span class="line">    base64_table[i] = base64_table[<span class="number">19</span> - i]</span><br><span class="line">    result = <span class="number">19</span> - i</span><br><span class="line">    base64_table[result] = v1</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> base64_table</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(i)), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># TSRQPONMLKJIHGFEDCBAUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</span></span><br></pre></td></tr></table></figure><ul><li>换表，赛博厨子解一下</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wctf2020&#123;Base64_is_the_start_of_reverse&#125;</span><br></pre></td></tr></table></figure><p><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5Dlevel3-5.png" alt="alt text"></p><ul><li>之前看到的一个wp里的脚本，挺有意思的，直接本地换表（映射）解密，在这贴一下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64 <span class="comment">#导入base64模块用于解密</span></span><br><span class="line">s1 = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span> <span class="comment">#标准表</span></span><br><span class="line">s2 = <span class="string">&#x27;qvEJAfHmUYjBac+u8Ph5n9Od17FrICL/X0gVtM4Qk6T2z3wNSsyoebilxWKGZpRD&#x27;</span> <span class="comment">#base64换表</span></span><br><span class="line">en_text = <span class="string">&#x27;5Mc58bPHLiAx7J8ocJIlaVUxaJvMcoYMaoPMaOfg15c475tscHfM/8==&#x27;</span> <span class="comment">#密文</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">map</span> = <span class="built_in">str</span>.maketrans(s2, s1) <span class="comment">#用str类中的maketrans建立映射，注意第一个参数是需要映射的字符串，第二个参数是映射的目标</span></span><br><span class="line">map_text = en_text.translate(<span class="built_in">map</span>) <span class="comment">#映射实现替换密文，替换前是base64换表加密，替换后则是base64标准表加密</span></span><br><span class="line"><span class="built_in">print</span>(map_text) <span class="comment">#可以先看看标准表加密的密文</span></span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(map_text)) <span class="comment">#直接使用提供的base64解密函数，获得明文，就是flag</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TlNTQ1RGe2E4ZDQzNDc3MjI4MDBlNzJlMzRlMWFiYTNmZTkxNGFlfQ==</span></span><br><span class="line"><span class="comment"># b&#x27;NSSCTF&#123;a8d4347722800e72e34e1aba3fe914ae&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">en_base64 = <span class="string">&#x27;d2G0ZjLwHjS7DmOzZAY0X2lzX3CoZV9zdNOydO9vZl9yZXZlcnGlfD==&#x27;</span></span><br><span class="line">de_base64 = <span class="string">&#x27;&#x27;</span></span><br><span class="line">old_base64_table = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line">new_base64_table = <span class="string">&#x27;TSRQPONMLKJIHGFEDCBAUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>((base64.b64decode((en_base64.translate(<span class="built_in">str</span>.maketrans(new_base64_table, old_base64_table))).encode())).decode())</span><br><span class="line"><span class="comment"># wctf2020&#123;Base64_is_the_start_of_reverse&#125;</span></span><br></pre></td></tr></table></figure><h2 id="WUSTCTF2020-level4"><a href="#WUSTCTF2020-level4" class="headerlink" title="[WUSTCTF2020]level4"></a>[WUSTCTF2020]level4</h2><ul><li>64位，无壳</li></ul><p><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5Dlevel4.png" alt="alt text"></p><p><img src="/./pic/BUUCTF-Reverse.assets/%5BWUSTCTF2020%5Dlevel4-1.png" alt="alt text"></p><ul><li><p>一眼没看出来，仔细看了才知道，<code>Date Structure</code>考了个数据结构</p></li><li><p>二叉树中序遍历</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall <span class="title function_">type1</span><span class="params">(<span class="type">char</span> *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( a1 )</span><br><span class="line">  &#123;</span><br><span class="line">    type1(*((_QWORD *)a1 + <span class="number">1</span>));</span><br><span class="line">    <span class="built_in">putchar</span>(*a1);</span><br><span class="line">    <span class="keyword">return</span> type1(*((_QWORD *)a1 + <span class="number">2</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>二叉树后序遍历</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">type2</span><span class="params">(<span class="type">char</span> *a1)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> result; <span class="comment">// eax</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( a1 )</span><br><span class="line">  &#123;</span><br><span class="line">    type2(*((_QWORD *)a1 + <span class="number">1</span>));</span><br><span class="line">    type2(*((_QWORD *)a1 + <span class="number">2</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">putchar</span>(*a1);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>程序运行的结果</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Traversal type 1:2f0t02T&#123;hcsiI_SwA__r7Ee&#125;</span><br><span class="line">Traversal type 2:20f0Th&#123;2tsIS_icArE&#125;e7__w</span><br></pre></td></tr></table></figure><ul><li>已知后序中序输出前序</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">build_tree</span>(<span class="params">post, mid</span>):</span><br><span class="line">    <span class="comment"># 如果没有元素，返回空树</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> post <span class="keyword">or</span> <span class="keyword">not</span> mid:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">  </span><br><span class="line">    root_val = post[-<span class="number">1</span>] <span class="comment"># 后序遍历的最后一个元素是当前树的根节点</span></span><br><span class="line">    root_index = mid.index(root_val)  <span class="comment"># 找到根节点在中序遍历中的位置</span></span><br><span class="line">    root = &#123;<span class="string">&#x27;val&#x27;</span>: root_val, <span class="string">&#x27;left&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;right&#x27;</span>: <span class="literal">None</span>&#125; <span class="comment"># 创建树的根节点</span></span><br><span class="line">    root[<span class="string">&#x27;left&#x27;</span>] = build_tree(post[:root_index], mid[:root_index])  <span class="comment"># 递归构建左子树</span></span><br><span class="line">    root[<span class="string">&#x27;right&#x27;</span>] = build_tree(post[root_index:-<span class="number">1</span>], mid[root_index + <span class="number">1</span>:])  <span class="comment"># 递归构建右子树</span></span><br><span class="line">    <span class="keyword">return</span> root</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">preorder_traversal</span>(<span class="params">root</span>):</span><br><span class="line">    <span class="comment"># 如果树为空，返回空列表</span></span><br><span class="line">    <span class="keyword">if</span> root <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> []</span><br><span class="line">    <span class="comment"># 返回根节点值 + 左子树的前序遍历 + 右子树的前序遍历</span></span><br><span class="line">    <span class="keyword">return</span> [root[<span class="string">&#x27;val&#x27;</span>]] + preorder_traversal(root[<span class="string">&#x27;left&#x27;</span>]) + preorder_traversal(root[<span class="string">&#x27;right&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入后序遍历和中序遍历</span></span><br><span class="line">post_order = <span class="string">&quot;20f0Th&#123;2tsIS_icArE&#125;e7__w&quot;</span></span><br><span class="line">in_order = <span class="string">&quot;2f0t02T&#123;hcsiI_SwA__r7Ee&#125;&quot;</span></span><br><span class="line"><span class="comment"># 重建二叉树</span></span><br><span class="line">tree_root = build_tree(<span class="built_in">list</span>(post_order), <span class="built_in">list</span>(in_order))</span><br><span class="line"><span class="comment"># 获取前序遍历结果</span></span><br><span class="line">pre_order_result = <span class="string">&#x27;&#x27;</span>.join(preorder_traversal(tree_root))</span><br><span class="line"><span class="built_in">print</span>(pre_order_result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># wctf2020&#123;This_IS_A_7reE&#125;</span></span><br></pre></td></tr></table></figure><h1 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h1>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FlareOnCTF</title>
      <link href="/2025/02/14/FlareOnCTF/"/>
      <url>/2025/02/14/FlareOnCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="FlareOnCTF-练习"><a href="#FlareOnCTF-练习" class="headerlink" title="FlareOnCTF 练习"></a>FlareOnCTF 练习</h1><h2 id="FlareOn4-IgniteMe"><a href="#FlareOn4-IgniteMe" class="headerlink" title="[FlareOn4] IgniteMe"></a>[FlareOn4] IgniteMe</h2><ul><li><p>无壳, ida 打开<br><img src="/./pic/FlareOnCTF.assets/%5BFlareOn4%5DIgniteMe.png" alt="alt text"><br><img src="/./pic/FlareOnCTF.assets/%5BFlareOn4%5DIgniteMe-2.png" alt="alt text"><br><img src="/./pic/FlareOnCTF.assets/%5BFlareOn4%5DIgniteMe-1.png" alt="alt text"></p></li><li><p>在 <code>xor_flag[i] = v4 ^ input[i]</code> 处下断点，动态调试后就可以看到 v4 的值了，（把鼠标放 v4 上就可以显示值），不好截图，双击 v4 也可以看到值为 4<br><img src="/./pic/FlareOnCTF.assets/%5BFlareOn4%5DIgniteMe-3.png" alt="alt text"></p></li><li><p>最后, 从 <code>最后一个</code> 开始异或 <code>前一个</code> 的运算</p></li><li><p>易错的是，<code>v4 = a[i] ^ v4</code>, 之前写成 <code>v4 = a[i]</code> 卡了好久</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a = [</span><br><span class="line">  <span class="number">0x0D</span>, <span class="number">0x26</span>, <span class="number">0x49</span>, <span class="number">0x45</span>, <span class="number">0x2A</span>, <span class="number">0x17</span>, <span class="number">0x78</span>, <span class="number">0x44</span>, <span class="number">0x2B</span>, <span class="number">0x6C</span>, </span><br><span class="line">  <span class="number">0x5D</span>, <span class="number">0x5E</span>, <span class="number">0x45</span>, <span class="number">0x12</span>, <span class="number">0x2F</span>, <span class="number">0x17</span>, <span class="number">0x2B</span>, <span class="number">0x44</span>, <span class="number">0x6F</span>, <span class="number">0x6E</span>, </span><br><span class="line">  <span class="number">0x56</span>, <span class="number">0x09</span>, <span class="number">0x5F</span>, <span class="number">0x45</span>, <span class="number">0x47</span>, <span class="number">0x73</span>, <span class="number">0x26</span>, <span class="number">0x0A</span>, <span class="number">0x0D</span>, <span class="number">0x13</span>, </span><br><span class="line">  <span class="number">0x17</span>, <span class="number">0x48</span>, <span class="number">0x42</span>, <span class="number">0x01</span>, <span class="number">0x40</span>, <span class="number">0x4D</span>, <span class="number">0x0C</span>, <span class="number">0x02</span>, <span class="number">0x69</span></span><br><span class="line">]</span><br><span class="line">v4 = <span class="number">0x4</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a) - <span class="number">1</span>, <span class="number">0</span>, -<span class="number">1</span>):</span><br><span class="line">    flag += <span class="built_in">chr</span>(a[i] ^ v4)</span><br><span class="line">    v4 = a[i] ^ v4</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag[::-<span class="number">1</span>])</span><br><span class="line"><span class="comment"># _y0u_H0t_3n0ugH_t0_1gn1t3@flare-on.com</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="FlareOn1-Bob-Doge"><a href="#FlareOn1-Bob-Doge" class="headerlink" title="[FlareOn1] Bob-Doge"></a>[FlareOn1] Bob-Doge</h2><ul><li>一个下载器，下载后运行是这个东西</li></ul><p><img src="/./pic/FlareOnCTF.assets/%5BFlareOn1%5DBob-Doge-2.png" alt="alt text"></p><p><img src="/./pic/FlareOnCTF.assets/%5BFlareOn1%5DBob-Doge-3.png" alt="alt text"></p><hr><ul><li><p>IDA 反编译, 看不懂没见过的形式<br><img src="/./pic/FlareOnCTF.assets/%5BFlareOn1%5DBob-Doge-4.png" alt="alt text"></p></li><li><p>换一个工具, despy 打开, 看上舒服多了</p></li><li><p>主要在这，<code>DECODE</code> 按钮事件，最终解码后的字符串 <code>text3</code> 显示在 <code>lbl_title</code> 标签中。</p></li></ul><p><img src="/./pic/FlareOnCTF.assets/%5BFlareOn1%5DBob-Doge-5.png" alt="alt text"></p><ul><li>下断点，动态调试，直接看内容</li></ul><p><img src="/./pic/FlareOnCTF.assets/%5BFlareOn1%5DBob-Doge-1.png" alt="alt text"></p><h2 id="FlareOn3-Challenge1"><a href="#FlareOn3-Challenge1" class="headerlink" title="[FlareOn3] Challenge1"></a>[FlareOn3] Challenge1</h2><p><img src="/./pic/FlareOnCTF.assets/%5BFlareOn3%5DChallenge1.png" alt="alt text"> <img src="/./pic/FlareOnCTF.assets/%5BFlareOn3%5DChallenge1-3.png" alt="alt text"></p><ul><li>base64 加密</li></ul><p><img src="/./pic/FlareOnCTF.assets/%5BFlareOn3%5DChallenge1-2.png" alt="alt text"></p><ul><li><code>shift+f12</code> 查看字符串，发现换表了</li></ul><p><img src="/./pic/FlareOnCTF.assets/%5BFlareOn3%5DChallenge1-4.png" alt="alt text"> <img src="/./pic/FlareOnCTF.assets/%5BFlareOn3%5DChallenge1-1.png" alt="alt text"></p><ul><li>赛博厨子梭哈一下，根据后面小写的形式可知，换的表前面少了个 <code>Z</code></li></ul><p><img src="/./pic/FlareOnCTF.assets/%5BFlareOn3%5DChallenge1-5.png" alt="alt text"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;sh00ting_phish_in_a_barrel@flare-on.com&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="FlareOn6-Overlong"><a href="#FlareOn6-Overlong" class="headerlink" title="[FlareOn6] Overlong"></a>[FlareOn6] Overlong</h2><ul><li>根据题目提示，这句话冒号 <code>:</code> 后面应该还有内容</li></ul><p><img src="/./pic/FlareOnCTF.assets/%5BFlareOn6%5DOverlong.png" alt="alt text"></p><ul><li>题目内容很少，都看一下<br><img src="/./pic/FlareOnCTF.assets/%5BFlareOn6%5DOverlong-1.png" alt="alt text"></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __stdcall <span class="title function_">start</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> a2, <span class="type">int</span> a3, <span class="type">int</span> a4)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> Text[<span class="number">128</span>]; <span class="comment">// [esp+0h] [ebp-84h] BYREF</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v6; <span class="comment">// [esp+80h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v6 = sub_401160(Text, (<span class="type">int</span>)&amp;unk_402008, <span class="number">28u</span>);</span><br><span class="line">  Text[v6] = <span class="number">0</span>;</span><br><span class="line">  MessageBoxA(<span class="number">0</span>, Text, Caption, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> __cdecl <span class="title function_">sub_401160</span><span class="params">(<span class="type">char</span> *a1, <span class="type">char</span> *a2, <span class="type">unsigned</span> <span class="type">int</span> a3)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> i; <span class="comment">// [esp+4h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; a3; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    a2 += sub_401000(a1, a2);</span><br><span class="line">    <span class="keyword">if</span> ( !*a1++ )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这里进行加密</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">sub_401000</span><span class="params">(<span class="type">unsigned</span> __int8 *a1, <span class="type">char</span> *a2)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">int</span> v3; <span class="comment">// [esp+0h] [ebp-8h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int8 v4; <span class="comment">// [esp+4h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( (<span class="type">int</span>)(<span class="type">unsigned</span> __int8)*a2 &gt;&gt; <span class="number">3</span> == <span class="number">30</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v4 = a2[<span class="number">3</span>] &amp; <span class="number">0x3F</span> | ((a2[<span class="number">2</span>] &amp; <span class="number">0x3F</span>) &lt;&lt; <span class="number">6</span>);</span><br><span class="line">    v3 = <span class="number">4</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( (<span class="type">int</span>)(<span class="type">unsigned</span> __int8)*a2 &gt;&gt; <span class="number">4</span> == <span class="number">14</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v4 = a2[<span class="number">2</span>] &amp; <span class="number">0x3F</span> | ((a2[<span class="number">1</span>] &amp; <span class="number">0x3F</span>) &lt;&lt; <span class="number">6</span>);</span><br><span class="line">    v3 = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( (<span class="type">int</span>)(<span class="type">unsigned</span> __int8)*a2 &gt;&gt; <span class="number">5</span> == <span class="number">6</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v4 = a2[<span class="number">1</span>] &amp; <span class="number">0x3F</span> | ((*a2 &amp; <span class="number">0x1F</span>) &lt;&lt; <span class="number">6</span>);</span><br><span class="line">    v3 = <span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v4 = *a2;</span><br><span class="line">    v3 = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  *a1 = v4;</span><br><span class="line">  <span class="keyword">return</span> v3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在 <code>&amp;unk_FB2008</code> 按 <code>shift+e</code> 提取数据，按加密写 python 脚本解密</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">a2 = [<span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0x89</span>, <span class="number">0xc0</span>, <span class="number">0xa0</span>, <span class="number">0xc1</span>, <span class="number">0xae</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0xa5</span>,</span><br><span class="line">      <span class="number">0xc1</span>, <span class="number">0xb6</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0xa5</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0xb2</span>, <span class="number">0xf0</span>,</span><br><span class="line">      <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0xa0</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0xa2</span>, <span class="number">0x72</span>, <span class="number">0x6f</span>, <span class="number">0xc1</span>, <span class="number">0xab</span>,</span><br><span class="line">      <span class="number">0x65</span>, <span class="number">0xe0</span>, <span class="number">0x80</span>, <span class="number">0xa0</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0xb4</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0xa8</span>,</span><br><span class="line">      <span class="number">0xc1</span>, <span class="number">0xa5</span>, <span class="number">0x20</span>, <span class="number">0xc1</span>, <span class="number">0xa5</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0xae</span>, <span class="number">0x63</span>, <span class="number">0xc1</span>,</span><br><span class="line">      <span class="number">0xaf</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0xa4</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0xa9</span>, <span class="number">0x6e</span>, <span class="number">0xc1</span>,</span><br><span class="line">      <span class="number">0xa7</span>, <span class="number">0xc0</span>, <span class="number">0xba</span>, <span class="number">0x20</span>, <span class="number">0x49</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0x9f</span>, <span class="number">0xc1</span>,</span><br><span class="line">      <span class="number">0xa1</span>, <span class="number">0xc1</span>, <span class="number">0x9f</span>, <span class="number">0xc1</span>, <span class="number">0x8d</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0x9f</span>, <span class="number">0xc1</span>, <span class="number">0xb4</span>,</span><br><span class="line">      <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0x9f</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0xa8</span>, <span class="number">0xc1</span>, <span class="number">0x9f</span>,</span><br><span class="line">      <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0xa5</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0x9f</span>, <span class="number">0xc1</span>, <span class="number">0xa5</span>, <span class="number">0xe0</span>,</span><br><span class="line">      <span class="number">0x81</span>, <span class="number">0x9f</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0xae</span>, <span class="number">0xc1</span>, <span class="number">0x9f</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>,</span><br><span class="line">      <span class="number">0x81</span>, <span class="number">0x83</span>, <span class="number">0xc1</span>, <span class="number">0x9f</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0xaf</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0x9f</span>,</span><br><span class="line">      <span class="number">0xc1</span>, <span class="number">0x84</span>, <span class="number">0x5f</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0xa9</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0x9f</span>,</span><br><span class="line">      <span class="number">0x6e</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0x9f</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0xa7</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>, <span class="number">0x80</span>,</span><br><span class="line">      <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0xa6</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0xac</span>, <span class="number">0xe0</span>, <span class="number">0x81</span>,</span><br><span class="line">      <span class="number">0xa1</span>, <span class="number">0xc1</span>, <span class="number">0xb2</span>, <span class="number">0xc1</span>, <span class="number">0xa5</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x80</span>, <span class="number">0xad</span>, <span class="number">0xf0</span>,</span><br><span class="line">      <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0xaf</span>, <span class="number">0x6e</span>, <span class="number">0xc0</span>, <span class="number">0xae</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0xa3</span>,</span><br><span class="line">      <span class="number">0x6f</span>, <span class="number">0xf0</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0xad</span>, <span class="number">0x0</span>]</span><br><span class="line">flag = []</span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">68</span>):</span><br><span class="line">    <span class="keyword">if</span> a2[j] &gt;&gt; <span class="number">3</span> == <span class="number">30</span>:</span><br><span class="line">        v4 = a2[j + <span class="number">3</span>] &amp; <span class="number">0x3f</span> | ((a2[j + <span class="number">2</span>] &amp; <span class="number">0x3f</span>) &lt;&lt; <span class="number">6</span>)</span><br><span class="line">        v3 = <span class="number">4</span></span><br><span class="line">    <span class="keyword">elif</span> a2[j] &gt;&gt; <span class="number">4</span> == <span class="number">14</span>:</span><br><span class="line">        v4 = a2[j + <span class="number">2</span>] &amp; <span class="number">0x3F</span> | ((a2[j + <span class="number">1</span>] &amp; <span class="number">0x3F</span>) &lt;&lt; <span class="number">6</span>)</span><br><span class="line">        v3 = <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> a2[j] &gt;&gt; <span class="number">5</span> == <span class="number">6</span>:</span><br><span class="line">        v4 = a2[j + <span class="number">1</span>] &amp; <span class="number">0x3F</span> | ((a2[j] &amp; <span class="number">0x1F</span>) &lt;&lt; <span class="number">6</span>)</span><br><span class="line">        v3 = <span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        v4 = a2[j]</span><br><span class="line">        v3 = <span class="number">1</span></span><br><span class="line">    flag.append(<span class="built_in">chr</span>(v4))</span><br><span class="line">    j += v3</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> flag:</span><br><span class="line">    <span class="built_in">print</span>(x, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># I never broke the encoding: I_a_M_t_h_e_e_n_C_o_D_i_n_g@flare-on.com</span></span><br><span class="line">flag&#123;I_a_M_t_h_e_e_n_C_o_D_i_n_g@flare-on.com&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="FlareOn5-Ultimate-MineSweeper"><a href="#FlareOn5-Ultimate-MineSweeper" class="headerlink" title="[FlareOn5] Ultimate MineSweeper"></a>[FlareOn5] Ultimate MineSweeper</h2><p><a href="https://www.cnblogs.com/z5onk0/p/17462714.html">大佬题解</a></p><ul><li>透视挂</li><li>无敌挂</li><li>提取数据</li></ul><hr><p>这题不会，但大佬三个方法中的一个，手动操作一下</p><ul><li>无敌挂</li></ul><p><code>右键-编辑方法</code> 或 <code>ctrl+shift+E</code><br>改为 <code>if (this.MineField.BombRevealed &amp;&amp; false)</code> 或直接把这段删除</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if (this.MineField.BombRevealed)</span><br><span class="line">&#123;</span><br><span class="line">    this.stopwatch.Stop();</span><br><span class="line">    Application.DoEvents();</span><br><span class="line">    Thread.Sleep(1000);</span><br><span class="line">    new FailurePopup().ShowDialog();</span><br><span class="line">    Application.Exit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变成这样</p><p>![alt text](.&#x2F;pic&#x2F;FlareOnCTF.assets&#x2F;[FlareOn5]Ultimate MineSweeper.png)</p><p><code>文件-保存模块</code>，然后运行程序，找到旗子</p><p>![alt text](.&#x2F;pic&#x2F;FlareOnCTF.assets&#x2F;[FlareOn5]Ultimate MineSweeper-2.png)<br>![alt text](.&#x2F;pic&#x2F;FlareOnCTF.assets&#x2F;[FlareOn5]Ultimate MineSweeper-1.png)</p><p>![alt text](.&#x2F;pic&#x2F;FlareOnCTF.assets&#x2F;[FlareOn5]Ultimate MineSweeper-4.png)<br>![alt text](.&#x2F;pic&#x2F;FlareOnCTF.assets&#x2F;[FlareOn5]Ultimate MineSweeper-3.png)</p><hr><h2 id="FlareOn4-login"><a href="#FlareOn4-login" class="headerlink" title="[FlareOn4]login"></a>[FlareOn4]login</h2><ul><li>题目是一个网页加密，直接查看页面源代码</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">Html</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>FLARE On 2017<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">id</span>=<span class="string">&quot;flag&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Enter the flag&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;prompt&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Click to check the flag&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;prompt&quot;</span>).<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> flag = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;flag&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> rotFlag = flag.<span class="title function_">replace</span>(<span class="regexp">/[a-zA-Z]/g</span>, <span class="keyword">function</span>(<span class="params">c</span>)&#123;<span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>((c &lt;= <span class="string">&quot;Z&quot;</span> ? <span class="number">90</span> : <span class="number">122</span>) &gt;= (c = c.<span class="title function_">charCodeAt</span>(<span class="number">0</span>) + <span class="number">13</span>) ? c : c - <span class="number">26</span>);&#125;);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (<span class="string">&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;</span> == rotFlag) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&quot;Correct flag!&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&quot;Incorrect flag, rot again&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>rot13加密</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;prompt&quot;</span>).<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> flag = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;flag&quot;</span>).<span class="property">value</span>;</span><br><span class="line">    <span class="keyword">var</span> rotFlag = flag.<span class="title function_">replace</span>(<span class="regexp">/[a-zA-Z]/g</span>, <span class="keyword">function</span>(<span class="params">c</span>)&#123;<span class="keyword">return</span> <span class="title class_">String</span>.<span class="title function_">fromCharCode</span>((c &lt;= <span class="string">&quot;Z&quot;</span> ? <span class="number">90</span> : <span class="number">122</span>) &gt;= (c = c.<span class="title function_">charCodeAt</span>(<span class="number">0</span>) + <span class="number">13</span>) ? c : c - <span class="number">26</span>);&#125;);</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;PyvragFvqrYbtvafNerRnfl@syner-ba.pbz&quot;</span> == rotFlag) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Correct flag!&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">alert</span>(<span class="string">&quot;Incorrect flag, rot again&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;      </span><br></pre></td></tr></table></figure><ul><li>rot13解密<br><img src="/./pic/FlareOnCTF.assets/%5BFlareOn4%5Dlogin.png" alt="alt text"></li></ul>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test-img</title>
      <link href="/2025/02/01/test-img/"/>
      <url>/2025/02/01/test-img/</url>
      
        <content type="html"><![CDATA[<p><img src="/2025-02-01-test-img/image.png" alt="alt text"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>文章置顶轮播图</title>
      <link href="/2025/01/29/%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6%E8%BD%AE%E6%92%AD%E5%9B%BE/"/>
      <url>/2025/01/29/%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6%E8%BD%AE%E6%92%AD%E5%9B%BE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 创建日期</span><br><span class="line">updated: 更新日期</span><br><span class="line">cover: 文章封面</span><br><span class="line">description: 文章描述</span><br><span class="line">swiper_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第三篇文章</title>
      <link href="/2025/01/29/%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2025/01/29/%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第二篇文章</title>
      <link href="/2025/01/29/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2025/01/29/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/2025-01-29-%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/image.png" alt="alt text"></p><p><img src="/images/2025-01-29-%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/image1.png" alt="alt text"></p><p><img src="/./images/2025-01-29-%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/image1.png" alt="alt text"></p><p><img src="/./images/image.png" alt="alt text"></p><p><img src="/_posts/images/2025-01-29-%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/image1.png" alt="alt text"></p><p><img src="/pic/2025-01-29-%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/image1.png" alt="alt text"></p><p><img src="/./pic/2025-01-29-%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/image1.png" alt="alt text"></p><img src="./pic/2025-01-29-第二篇文章/image1.png" alt="alt text" style="zoom:50%;" />]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/01/28/hello-world/"/>
      <url>/2025/01/28/hello-world/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="f20a63f048a9896e8d109f21cb929aa634d3b6f57372ae4a5bdbb6d9e603668e">15614819f5c2827bcb053d181e399f451105f8f8c5dfc7278ae67a5ab301641e4adf10d1fc05b3835ba28e2ecd352085b1b26ba8bf5522c38bc66b9eae9446d7ca5fcf7561a0772d2453e38eb54f918605c70074343fe6f1f5f61bf1efec39ed2ee24105afc7a0bfd20510e054b7a16057d4ceeb11da83aacfd8a9070a862185e2b9c7fe8f84f292c87d290fa4785f0d49b0198637ca0a55d313035d50bfc388587b4c4b3cedadd7ca56d3e963af5ff14df7d07413376ea6f237e6bb1a2c68779b9dea8ade37c778ad1655ec05e22feb6c2c54cc96b323c3b6d5467372b8cb390f56f2db2f2972ed1ebdc90d51b95da49ced6a67935d676022d92bdc0fa421c7aa5faa6ff872cb8368a4c5d966c2edb7181b268339ecb56d7bc211de1122e7700ad1e22346c8f49f29f131bc3111c8370602a85463e225d9ee3acb95dc3ca340d1e6abda8700268e033c64915d71b7dfbabd66cb9c4cc4d41cb6ae02a942030bd1bccfb4883f071508c376f3e91b117c2d0ec88e7201516fd2507f1bc4e6a6300bf7fe93ab1a7c7a30888c387dcdfdc5bfab46a3dd7f946535f97669034fcf801304da2bae904d65b87bb2f15b378c342c1d4db272bdf6fbdb75c126b6f98dbadce5573659abbce58f6e3c97dd4c6f5116514e7c1b6d535761219dd764cd37920b65e6be5ae2d2911dac5e36764109be1f42f0271ea8c228719dd8fa951fd133816db359b90ba463abc8bf57091ffdf0dd82c416d10f6ea55ee5fe647428336500404b108f4b0d66aaa9fb24b4d2111ef965c38844ed49f4d865d0496b532c7a03578785f154c1fbd5ee86a937e5f9f770c5cb2605bd005ef7e8a1d7690f8d2e1249a93c317a2383d86b5b501d918b5ef2f610982259b8b15b0ce299e513b82d5a839a6f1d5552e8541605515255017a850e3423408229c890f83c36e34e7cc24d3d5fb083fb4a5f5ed052cc9374c4c17723d80e8a73acffd47e950810f783d5fb737e4e0cf4e04f9131eea670bc1d2cc2bcfa33900f5a2504f6d927aa6ce8cb98791f88f6970ca2a013678966c8634366b5cea48a2fd1e60fe32e72117d143262bad0cebd2b9771c3774427dd26fcd0de71471188fb270f4c84c7fd0a8d618a5ce3e4dd4c85d978b173db060e404353c3bc770e4dcee0f73cf8284a459c7086713a73021a14398d9c94195a7030ede43004d4f6c1169d85532fc2baaa2b0d0dc5556a93e32410a4691055121b52e665360ec78f8dffa3824b19fae7a0c6ac184f77bfbe89a9e64324df2bbb20f536b6fa29ab577359b9f9cec0cf91da7809f8702d034e4bd4a0fdf8ebe40f9713817d682795c666a4501392749d45b459f8f07caebd01c048ef369e30ad02b934056ce019104856b33e11b3d808bdacec79421702959f81829ac9ca5f0c22f0d01f266c8e729e56faed92ff3a0fba5720aaec251ca44f53b2d196b09dfcbb625efc1b0f7fa8cb9a53b0bdbf51e1df5ff07aacb468f95023dcd8dff3e65bfc4ec8a2e2ff583465f2208dca733b3c3c6a51c24dd955f6a809628dcfd718c86649dd4306bf62c5f7de28f293af8035c2a4fd8867b671096827b47640a259c684fceeec16e86ab9754133e8653345c7288692d0cf71b6cbb5910044ad18d0859eb70cdf34f91230d3c5bcaa21f9983629a2fdb5ba5bcc882b8346775f061af40aa66afecd44d1614ad26c6323f1684dfd08d5d15ed76601155e2bdb453c8f6f8ea0cee2dc8fd7e9949ebf814a938d1d01316bed3df4abff665adbab8121b45b7f8e9f8f97a1a263a6c40363c2052be885b509a325b9a4e5d437a010a6270b98a39224027dba8b3ffd8efee0413665d79eb8f784f0d37d1ed2c8a73fc39874ab80e0b1c66f2b9506a8a466ca23e750de2133c8d48d8da419f34837f6da1bb702c8a3580090d51fab1f32d20f4d2eb118501022f4aed4926a388568c5191bc146c43ba20e2baf68ff589fad4b06598ab85acdfb09481145125c4086fe669a73fc886b4428cd9b34380b1aa3454a4173dbb1206bb3e32c8e4fa73d027260fbe5d84b8e9e70c4f54e0bdb0bcb609e73e8bae51f4e9288a97308848ef6a41b68a44cd8ce45648390cabafee6da2a44b892b29dcf95cfbb676af69c7c85d0540d80476a6db02f072b4ce89e6614332d730ff1f35db730d9f11d05da0f02efd6f3e62e783a45fc5996a18efda4dffa6f021913003d9bfc33feac1dda7c46d40ccd206079a2731c91ce3357df51f5d021693f148e56a035f2abbc4fb4fb4246e96091ee0a5b4714a3fabdac914a18afedcefa250ad1cf0f2595deb1d42ae464c0d01caab3f6a84b5d77731f1c7f4b3273f94bc2917e968e83e34a000540fe6625f4a2fe0a8183f5db682a9eb8d7a849b76da4064636ca1650b9f58e69778a990d70eb51e48bbc6bc7a7b99126cd115dbacb90985541a3710698116b33abc5ba6b0ff2eb2afd7bbf165e919ef00e5075329a9cfaf5173a1180c3f2dc2089575023d5a6070f0e872a6d9ad1aa477ab6235416ca7f38d3f1756c2d88cd73406eeb26f616b670209c5b7b4528ff39ff33c77f8fbf836a29448db38e7ab76766fb1796b110f4541feef0a61f0db3820f234ea9740609b95645ad57c00b8e86833c7a87b3cb6ba334eda49a27328466554ddab4be6b66b3590beec6b8b40798222bc2cf4abe72271258d4c1a5139c06e753b3356efd555e74f1ab7de3fc17eba50479fdc3c9809d701c70cd1dc040b04b8c3a43c8accf75521427391e23f19d0f8eeaf17d5ab161608a6ef9749fba6e5310ca5ffdb851b91e173d2da976a44477b16509f26a793c9ce5690a91f3fd8b7dd82f642402058261aac8ee90c11f25631cee7f06b3fecc1d0b03fcb58c0c4feb94e69ae414cc734b8ef09b43e48dd6377eb6eb31d0012b7bddbf88fdee42b8fd09a1cd49f2486cc2a5760b6521ddfd85ab8aa17923bdc3b9911f41fcc664335608cb1e343bb688b274740780af71951d1ff9abc4d8792296cc700a79345d8dbdbeb00a04b24c919387890c8ddd8de6f46fc0eef4990aba99a7dca954ca77454768a9709fc7cc511150ce71d067f1aece0d8bf8fe762ab71b396a58071352e4a2e74e11b2206c71433d340e6b7e5edbc06ef06476bb0169b8783936</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2025-01-28-第一篇文章.md</title>
      <link href="/2025/01/28/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2025/01/28/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="标题-壹"><a href="#标题-壹" class="headerlink" title="标题-壹"></a>标题-壹</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle = (el, attr) => {    try {        return window.getComputedStyle            ? window.getComputedStyle(el)[attr]            : el.currentStyle[attr];    } catch (e) {}    return "";};class Cursor {    constructor() {        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    move(left, top) {        this.cursor.style["left"] = `${left}px`;        this.cursor.style["top"] = `${top}px`;    }    create() {        if (!this.cursor) {            this.cursor = document.createElement("div");            this.cursor.id = "cursor";            this.cursor.classList.add("hidden");            document.body.append(this.cursor);        }        var el = document.getElementsByTagName('*');        for (let i = 0; i < el.length; i++)            if (getStyle(el[i], "cursor") == "pointer")                this.pt.push(el[i].outerHTML);        document.body.appendChild((this.scr = document.createElement("style")));        // 这里改变鼠标指针的颜色 由svg生成        this.scr.innerHTML = `* {cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='8px' height='8px'><circle cx='4' cy='4' r='4' opacity='1.0' fill='rgb(57, 197, 187)'/></svg>") 4 4, auto}`;    }    refresh() {        this.scr.remove();        this.cursor.classList.remove("hover");        this.cursor.classList.remove("active");        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    init() {        document.onmouseover  = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");        document.onmouseout   = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");        document.onmousemove  = e => {(this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8); this.pos.curr = {x: e.clientX - 8, y: e.clientY - 8}; this.cursor.classList.remove("hidden");};        document.onmouseenter = e => this.cursor.classList.remove("hidden");        document.onmouseleave = e => this.cursor.classList.add("hidden");        document.onmousedown  = e => this.cursor.classList.add("active");        document.onmouseup    = e => this.cursor.classList.remove("active");    }    render() {        if (this.pos.prev) {            this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);            this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);            this.move(this.pos.prev.x, this.pos.prev.y);        } else {            this.pos.prev = this.pos.curr;        }        requestAnimationFrame(() => this.render());    }}(() => {    CURSOR = new Cursor();    // 需要重新获取列表时，使用 CURSOR.refresh()})();]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[:root {  --trans-light: rgba(255, 255, 255, 0.88);  --trans-dark: rgba(25, 25, 25, 0.88);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: blur(5px) saturate(150%);}/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }/*自定义字体*/  @font-face {    /* 为载入的字体取名字(随意) */    font-family: 'YSHST';    /* 字体文件地址(相对或者绝对路径都可以) */    src: url(/font/优设好身体.woff2);    /* 定义加粗样式(加粗多少) */    font-weight: normal;    /* 定义字体样式(斜体/非斜体) */    font-style: normal;    /* 定义显示样式 */    font-display: block;  }/* 翻页按钮居中 */#pagination {  width: 100%;  margin: auto;}/*导航栏魔改（居中）*//* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(2) .menus_item_child {  left: -125px;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {  background: linear-gradient(    -45deg,    #e8d8b9,    #eccec5,    #a3e9eb,    #bdbdf0,    #eec1ea  );  box-shadow: 0 0 5px rgb(66, 68, 68);  position: relative;  background-size: 400% 400%;  -webkit-animation: Gradient 10s ease infinite;  -moz-animation: Gradient 10s ease infinite;  animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@-moz-keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}@keyframes Gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {  background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {  background-color: #3eb8be;  border-radius: 8px;}/* 鼠标样式 */#cursor {  position: fixed;  width: 16px;  height: 16px;  /* 这里改变跟随的底色 */  background:rgb(57, 197, 187);  border-radius: 8px;  opacity: 0.25;  z-index: 10086;  pointer-events: none;  transition: 0.2s ease-in-out;  transition-property: background, opacity, transform;}#cursor.hidden {  opacity: 0;}#cursor.hover {  opacity: 0.1;  transform: scale(2.5);  -webkit-transform: scale(2.5);  -moz-transform: scale(2.5);  -ms-transform: scale(2.5);  -o-transform: scale(2.5);}#cursor.active {  opacity: 0.5;  transform: scale(0.5);  -webkit-transform: scale(0.5);  -moz-transform: scale(0.5);  -ms-transform: scale(0.5);  -o-transform: scale(0.5);}/*页面样式调节*//*:root已放css最前面*//* :root {  --trans-light: rgba(255, 255, 255, 0.88);  --trans-dark: rgba(25, 25, 25, 0.88);  --border-style: 1px solid rgb(169, 169, 169);  --backdrop-filter: blur(5px) saturate(150%);} *//* 首页文章卡片 */#recent-posts > .recent-post-item {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 25px;  border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border-radius: 18px;  border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {  background: var(--trans-light);  backdrop-filter: var(--backdrop-filter);  border: var(--border-style);  border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {  background: rgba(255, 255, 255, 0.75);  backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {  background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {  background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {  background: transparent !important;}[data-theme="dark"] #page-header::before {  background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {  background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {  background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}[data-theme="dark"] .read-mode div#post {  background: rgba(25, 25, 25, 0.9) !important;  color: #ffffff;}/* 滚动条样式 */::-webkit-scrollbar {  width: 8px;  height: 8px;}::-webkit-scrollbar-track {  background-color: rgba(73, 177, 245, 0.2);  border-radius: 2em;}::-webkit-scrollbar-thumb {  background-color: var(rgba(73, 177, 245, 0.2));  background-image: -webkit-linear-gradient(    45deg,    rgba(255, 255, 255, 0.4) 25%,    transparent 25%,    transparent 50%,    rgba(255, 255, 255, 0.4) 50%,    rgba(255, 255, 255, 0.4) 75%,    transparent 75%,    transparent  );  border-radius: 2em;}::-webkit-scrollbar-corner {  background-color: transparent;}::-moz-selection {  color: #fff;  background-color: var(rgba(73, 177, 245, 0.2));}/* 欢迎信息 */#welcome-info {  background: linear-gradient(45deg, #b9f4f3, #e3fbf9);  border-radius: 18px;  padding: 8px;}[data-theme="dark"] #welcome-info {  background: #212121;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){now.setTime(now.getTime()+1e3);    var e=new Date("01/28/2025 22:00:00"),t=Math.trunc(234e8+(now-e)/1e3*17),a=(t/1496e5).toFixed(6),o=new Date("01/28/2025 22:00:00"),n=(now-o)/1e3/60/60/24,r=Math.floor(n),i=(now-o)/1e3/60/60-24*r,s=Math.floor(i);1==String(s).length&&(s="0"+s);    var d=(now-o)/1e3/60-1440*r-60*s,l=Math.floor(d);1==String(l).length&&(l="0"+l);var g=(now-o)/1e3-86400*r-3600*s-60*l,b=Math.round(g);1==String(b).length&&(b="0"+b);let c="";c=s<18&&s>=9?`<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-科研摸鱼中.svg' title='什么时候能够实现财富自由呀~'><br> <div style="font-size:13px;font-weight:bold">本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</div>`:`<img class='boardsign' src='https://sourcebucket.s3.ladydaily.com/badge/F小屋-下班休息啦.svg' title='下班了就该开开心心地玩耍~'><br> <div style="font-size:13px;font-weight:bold">本站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 旅行者 1 号当前距离地球 ${t} 千米，约为 ${a} 个天文单位 🚀</div>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=c)}setInterval((()=>{createtime()}),1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title.js"/>
      <url>/js/title.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () {  if (document.hidden) {    //离开当前页面时标签显示内容    document.title = '愿此行';    clearTimeout(titleTime);  } else {    //返回当前页面时标签显示内容    document.title = '终抵群星';    //两秒后变回正常标题    titleTime = setTimeout(function () {      document.title = OriginTitile;    }, 2000);  }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/txmap.js"/>
      <url>/js/txmap.js</url>
      
        <content type="html"><![CDATA[//get请求$.ajax({    type: 'get',    url: 'https://apis.map.qq.com/ws/location/v1/ip',    data: {        key: '6SMBZ-5PHKT-JSQXK-VFKNX-IPMQO-UIFFE',        output: 'jsonp',    },    dataType: 'jsonp',    success: function (res) {        ipLoacation = res;    }})function getDistance(e1, n1, e2, n2) {    const R = 6371    const { sin, cos, asin, PI, hypot } = Math    let getPoint = (e, n) => {        e *= PI / 180        n *= PI / 180        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }    }    let a = getPoint(e1, n1)    let b = getPoint(e2, n2)    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)    let r = asin(c / 2) * 2 * R    return Math.round(r);}function showWelcome() {    let dist = getDistance(113.34499552, 23.15537143, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里换成自己的经纬度    let pos = ipLoacation.result.ad_info.nation;    let ip;    let posdesc;    //根据国家、省份、城市信息自定义欢迎语    switch (ipLoacation.result.ad_info.nation) {        case "日本":            posdesc = "よろしく，一起去看樱花吗";            break;        case "美国":            posdesc = "Let us live in peace!";            break;        case "英国":            posdesc = "想同你一起夜乘伦敦眼";            break;        case "俄罗斯":            posdesc = "干了这瓶伏特加！";            break;        case "法国":            posdesc = "C'est La Vie";            break;        case "德国":            posdesc = "Die Zeit verging im Fluge.";            break;        case "澳大利亚":            posdesc = "一起去大堡礁吧！";            break;        case "加拿大":            posdesc = "拾起一片枫叶赠予你";            break;        case "中国":            pos = ipLoacation.result.ad_info.province + " " + ipLoacation.result.ad_info.city + " " + ipLoacation.result.ad_info.district;            ip = ipLoacation.result.ip;            switch (ipLoacation.result.ad_info.province) {                case "北京市":                    posdesc = "北——京——欢迎你~~~";                    break;                case "天津市":                    posdesc = "讲段相声吧。";                    break;                case "河北省":                    posdesc = "山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。";                    break;                case "山西省":                    posdesc = "展开坐具长三尺，已占山河五百余。";                    break;                case "内蒙古自治区":                    posdesc = "天苍苍，野茫茫，风吹草低见牛羊。";                    break;                case "辽宁省":                    posdesc = "我想吃烤鸡架！";                    break;                case "吉林省":                    posdesc = "状元阁就是东北烧烤之王。";                    break;                case "黑龙江省":                    posdesc = "很喜欢哈尔滨大剧院。";                    break;                case "上海市":                    posdesc = "众所周知，中国只有两个城市。";                    break;                case "江苏省":                    switch (ipLoacation.result.ad_info.city) {                        case "南京市":                            posdesc = "这是我挺想去的城市啦。";                            break;                        case "苏州市":                            posdesc = "上有天堂，下有苏杭。";                            break;                        default:                            posdesc = "散装是必须要散装的。";                            break;                    }                    break;                case "浙江省":                    posdesc = "东风渐绿西湖柳，雁已还人未南归。";                    break;                case "河南省":                    switch (ipLoacation.result.ad_info.city) {                        case "郑州市":                            posdesc = "豫州之域，天地之中。";                            break;                        case "南阳市":                            posdesc = "臣本布衣，躬耕于南阳。此南阳非彼南阳！";                            break;                        case "驻马店市":                            posdesc = "峰峰有奇石，石石挟仙气。嵖岈山的花很美哦！";                            break;                        case "开封市":                            posdesc = "刚正不阿包青天。";                            break;                        case "洛阳市":                            posdesc = "洛阳牡丹甲天下。";                            break;                        default:                            posdesc = "可否带我品尝河南烩面啦？";                            break;                    }                    break;                case "安徽省":                    posdesc = "蚌埠住了，芜湖起飞。";                    break;                case "福建省":                    posdesc = "井邑白云间，岩城远带山。";                    break;                case "江西省":                    posdesc = "落霞与孤鹜齐飞，秋水共长天一色。";                    break;                case "山东省":                    posdesc = "遥望齐州九点烟，一泓海水杯中泻。";                    break;                case "湖北省":                    posdesc = "来碗热干面！";                    break;                case "湖南省":                    posdesc = "74751，长沙斯塔克。";                    break;                case "广东省":                    posdesc = "老板来两斤福建人。";                    break;                case "广西壮族自治区":                    posdesc = "桂林山水甲天下。";                    break;                case "海南省":                    posdesc = "朝观日出逐白浪，夕看云起收霞光。";                    break;                case "四川省":                    posdesc = "康康川妹子。";                    break;                case "贵州省":                    posdesc = "茅台，学生，再塞200。";                    break;                case "云南省":                    posdesc = "玉龙飞舞云缠绕，万仞冰川直耸天。";                    break;                case "西藏自治区":                    posdesc = "躺在茫茫草原上，仰望蓝天。";                    break;                case "陕西省":                    posdesc = "来份臊子面加馍。";                    break;                case "甘肃省":                    posdesc = "羌笛何须怨杨柳，春风不度玉门关。";                    break;                case "青海省":                    posdesc = "牛肉干和老酸奶都好好吃。";                    break;                case "宁夏回族自治区":                    posdesc = "大漠孤烟直，长河落日圆。";                    break;                case "新疆维吾尔自治区":                    posdesc = "驼铃古道丝绸路，胡马犹闻唐汉风。";                    break;                case "台湾省":                    posdesc = "我在这头，大陆在那头。";                    break;                case "香港特别行政区":                    posdesc = "永定贼有残留地鬼嚎，迎击光非岁玉。";                    break;                case "澳门特别行政区":                    posdesc = "性感荷官，在线发牌。";                    break;                default:                    posdesc = "带我去你的城市逛逛吧！";                    break;            }            break;        default:            posdesc = "带我去你的国家逛逛吧。";            break;    }    //根据本地时间切换欢迎语    let timeChange;    let date = new Date();    if (date.getHours() >= 5 && date.getHours() < 11) timeChange = "<span>上午好</span>，一日之计在于晨！";    else if (date.getHours() >= 11 && date.getHours() < 13) timeChange = "<span>中午好</span>，该摸鱼吃午饭了。";    else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = "<span>下午好</span>，懒懒地睡个午觉吧！";    else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = "<span>三点几啦</span>，一起饮茶呀！";    else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = "<span>夕阳无限好！</span>";    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = "<span>晚上好</span>，夜生活嗨起来！";    else timeChange = "夜深了，早点休息，少熬夜。";    try {        //自定义文本和需要放的位置        document.getElementById("welcome-info").innerHTML =            `<b><center>🎉 欢迎信息 🎉</center>&emsp;&emsp;欢迎来自 <span style="color:var(--theme-color)">${pos}</span> 的小伙伴，${timeChange}您现在距离站长约 <span style="color:var(--theme-color)">${dist}</span> 公里，当前的IP地址为： <span style="color:var(--theme-color)">${ip}</span>， ${posdesc}</b>`;    } catch (err) {        // console.log("Pjax无法获取#welcome-info元素🙄🙄🙄")    }}window.onload = showWelcome;// 如果使用了pjax在加上下面这行代码// document.addEventListener('pjax:complete', showWelcome);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
